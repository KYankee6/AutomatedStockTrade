import win32com.client
import win32api
import time
import datetime


def HighestPrice(amount,code):
    # SetInputValue
    instStockChart.SetInputValue(0, code)
    instStockChart.SetInputValue(1, ord('2'))
    instStockChart.SetInputValue(4, amount)
    instStockChart.SetInputValue(5, 3)
    instStockChart.SetInputValue(6, ord('D'))
    instStockChart.SetInputValue(9, ord('1'))

    # BlockRequest
    instStockChart.BlockRequest()

    # GetData
    volumes = []
    numData = instStockChart.GetHeaderValue(3)
    for i in range(numData):
        volume = instStockChart.GetDataValue(0, i)
        volumes.append(volume)

    return volumes
def EndPrice(amount,code):
    # SetInputValue
    instStockChart.SetInputValue(0, code)
    instStockChart.SetInputValue(1, ord('2'))
    instStockChart.SetInputValue(4, amount)
    instStockChart.SetInputValue(5, 5)
    instStockChart.SetInputValue(6, ord('D'))
    instStockChart.SetInputValue(9, ord('1'))

    # BlockRequest
    instStockChart.BlockRequest()

    # GetData
    volumes = []
    numData = instStockChart.GetHeaderValue(3)
    for i in range(numData):
        volume = instStockChart.GetDataValue(0, i)
        volumes.append(volume)

    return volumes
# def EndPrice(start,end,code):
#
#     # SetInputValue
#     instStockChart.SetInputValue(0, code)
#     instStockChart.SetInputValue(1, ord('1'))
#     instStockChart.SetInputValue(2,start)
#     instStockChart.SetInputValue(3,end)
#     instStockChart.SetInputValue(5, 5)
#     instStockChart.SetInputValue(6, ord('D'))
#     instStockChart.SetInputValue(9, ord('1'))
#
#     # BlockRequest
#     instStockChart.BlockRequest()
#
#     # GetData
#     volumes = []
#     numData = instStockChart.GetHeaderValue(3)
#     for i in range(numData):
#         volume = instStockChart.GetDataValue(0, i)
#         volumes.append(volume)
#
#     return volumes
def stock_info(code):
    info=[]
    instMarketEye.SetInputValue(0, (67, 70, 111))
    instMarketEye.SetInputValue(1, code)
    instMarketEye.BlockRequest()
    info.append(code)  #Code
    info.append(instCpCodeMgr.CodeToName(code)) #이름
    high = HighestPrice(1, code)    # 오늘 고가 구하기
    endList = EndPrice(2, code)     # 전일 종가 구하기
    end=endList[1]                  # 전일 종가
    info.append(round((high[0]/end),2))           # 전일 대비 최고가(%)
    info.append(instMarketEye.GetDataValue(0, 0)) #PER
    info.append(instMarketEye.GetDataValue(1, 0)) #EPS
    recentdiv=instMarketEye.GetDataValue(2, 0)
    if(type(recentdiv)==str):
        info.append('00000000') #최근분기년월
    else :
        info.append(instMarketEye.GetDataValue(2, 0))
    return info

def SaveMostTraded(tradedlist):
    dt=datetime.datetime.now()
    curDay=dt.strftime("%Y%m%d")
    excel = win32com.client.Dispatch("Excel.Application")
    excel.Visible=True
    wb=excel.Workbooks.Add()
    ws=wb.Worksheets("Sheet1")
    dst="C:\\Users\\82105\\Desktop\\주식\\거래량_급등주_분석\\"+curDay+".xls"
    ws.Cells(1,1).Value="0"
    ws.Cells(1,2).Value="Code"
    ws.Cells(1,3).Value="이름"
    ws.Cells(1,4).Value="전일대비 고가(%)"
    ws.Cells(1,5).Value="PES"
    ws.Cells(1,6).Value="EPS"
    ws.Cells(1,7).Value="최근분기년월"
    for i,Code in enumerate(tradedlist):
        ws.Cells(2 + i, 1).Value = i+1
        info = stock_info(tradedlist[i])
        for j in range(len(info)):
            ws.Cells(2+i,j+2).Value=info[j]
    wb.SaveAs(dst)
    excel.Quit()

def CheckVolumn(instStockChart, code):
    # SetInputValue
    instStockChart.SetInputValue(0, code)
    instStockChart.SetInputValue(1, ord('2'))
    instStockChart.SetInputValue(4, 60)
    instStockChart.SetInputValue(5, 8)
    instStockChart.SetInputValue(6, ord('D'))
    instStockChart.SetInputValue(9, ord('1'))

    # BlockRequest
    instStockChart.BlockRequest()

    # GetData
    volumes = []
    numData = instStockChart.GetHeaderValue(3)
    for i in range(numData):
        volume = instStockChart.GetDataValue(0, i)
        volumes.append(volume)

    # Calculate average volume
    if(sum(volumes)==0 or len(volumes)==0):
        return 0
    averageVolume = (sum(volumes) - volumes[0]) / (len(volumes) -1)

    if(volumes[0] > averageVolume * 10):
        return 1
    else:
        return 0

if __name__ == "__main__":
    win32api.FormatMessage(-2147352565)
    instMarketEye=win32com.client.Dispatch("CpSysDib.MarketEye")
    instCpStockCode = win32com.client.Dispatch("CpUtil.CpStockCode")
    instStockChart = win32com.client.Dispatch("CpSysDib.StockChart")
    instCpCodeMgr = win32com.client.Dispatch("CpUtil.CpCodeMgr")
    codeList = instCpCodeMgr.GetStockListByMarket(1)
    buyList = []
    for code in codeList:
        if CheckVolumn(instStockChart, code) == 1:
            buyList.append(code)
            print(code)
        time.sleep(0.01)
    SaveMostTraded(buyList)
